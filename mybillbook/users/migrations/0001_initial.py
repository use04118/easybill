# Generated by Django 5.1.6 on 2025-05-05 09:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Free Trial', 'Free Trial'), ('Premium Monthly', 'Premium Monthly'), ('Premium Annual', 'Premium Annual')], max_length=20, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duration_days', models.PositiveIntegerField()),
                ('features', models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('mobile', models.CharField(max_length=15, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='static/profile/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('business_address', models.TextField(blank=True)),
                ('street_address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, choices=[('Andhra Pradesh', 'Andhra Pradesh'), ('Arunachal Pradesh', 'Arunachal Pradesh'), ('Assam', 'Assam'), ('Bihar', 'Bihar'), ('Chhattisgarh', 'Chhattisgarh'), ('Goa', 'Goa'), ('Gujarat', 'Gujarat'), ('Haryana', 'Haryana'), ('Himachal Pradesh', 'Himachal Pradesh'), ('Jharkhand', 'Jharkhand'), ('Karnataka', 'Karnataka'), ('Kerala', 'Kerala'), ('Madhya Pradesh', 'Madhya Pradesh'), ('Maharashtra', 'Maharashtra'), ('Manipur', 'Manipur'), ('Meghalaya', 'Meghalaya'), ('Mizoram', 'Mizoram'), ('Nagaland', 'Nagaland'), ('Odisha', 'Odisha'), ('Punjab', 'Punjab'), ('Rajasthan', 'Rajasthan'), ('Sikkim', 'Sikkim'), ('Tamil Nadu', 'Tamil Nadu'), ('Telangana', 'Telangana'), ('Tripura', 'Tripura'), ('Uttar Pradesh', 'Uttar Pradesh'), ('Uttarakhand', 'Uttarakhand'), ('West Bengal', 'West Bengal'), ('Delhi', 'Delhi'), ('Jammu and Kashmir', 'Jammu and Kashmir'), ('Ladakh', 'Ladakh'), ('Puducherry', 'Puducherry'), ('Chandigarh', 'Chandigarh'), ('Andaman and Nicobar Islands', 'Andaman and Nicobar Islands'), ('Dadra and Nagar Haveli and Daman and Diu', 'Dadra and Nagar Haveli and Daman and Diu'), ('Lakshadweep', 'Lakshadweep')], max_length=100, null=True)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('pan_number', models.CharField(blank=True, max_length=15, null=True)),
                ('gstin', models.CharField(blank=True, max_length=15, null=True)),
                ('tds', models.BooleanField(default=False)),
                ('tcs', models.BooleanField(default=False)),
                ('business_type', models.JSONField(blank=True, default=list)),
                ('industry_type', models.CharField(blank=True, choices=[('Accounting and Financial Services', 'Accounting and Financial Services'), ('Agriculture', 'Agriculture'), ('Automobile', 'Automobile'), ('Battery', 'Battery'), ('Broadband/ Cable/ Internet', 'Broadband/ Cable/ Internet'), ('Building Material and Construction', 'Building Material and Construction'), ('Cleaning and Pest Control', 'Cleaning and Pest Control'), ('Consulting', 'Consulting'), ('Dairy (Milk)', 'Dairy (Milk)'), ('Doctor / Clinic / Hospital', 'Doctor / Clinic / Hospital'), ('Education - Schooling/ Coaching', 'Education - Schooling/ Coaching'), ('Electrical works', 'Electrical works'), ('Electronics', 'Electronics'), ('Engineering', 'Engineering'), ('Event planning and management', 'Event planning and management'), ('FMCG', 'FMCG'), ('Fitness - Gym and Spa', 'Fitness - Gym and Spa'), ('Footwear', 'Footwear'), ('Fruits and Vegetables', 'Fruits and Vegetables'), ('Furniture', 'Furniture'), ('Garment/ Clothing', 'Garment/ Clothing'), ('General Store (Kirana)', 'General Store (Kirana)'), ('Gift Shop', 'Gift Shop'), ('Hardware', 'Hardware'), ('Home services', 'Home services'), ('Hotels and Hospitality', 'Hotels and Hospitality'), ('Information Technology', 'Information Technology'), ('Interiors', 'Interiors'), ('Jewellery', 'Jewellery'), ('Liquor', 'Liquor'), ('Machinery', 'Machinery'), ('Meat', 'Meat'), ('Medical Devices', 'Medical Devices'), ('Medicine (Pharma)', 'Medicine (Pharma)'), ('Mobile and accessories', 'Mobile and accessories'), ('Oil And Gas', 'Oil And Gas'), ('Opticals', 'Opticals'), ('Other services', 'Other services'), ('Others', 'Others'), ('Packaging', 'Packaging'), ('Paints', 'Paints'), ('Photography', 'Photography'), ('Plywood', 'Plywood'), ('Printing', 'Printing'), ('Real estate - Rentals and Lease', 'Real estate - Rentals and Lease'), ('Restaurants/ Cafe/ Catering', 'Restaurants/ Cafe/ Catering'), ('Safety Equipments', 'Safety Equipments'), ('Salon', 'Salon'), ('Scrap', 'Scrap'), ('Service Centres', 'Service Centres'), ('Sports Equipments', 'Sports Equipments'), ('Stationery', 'Stationery'), ('Tailoring/ Boutique', 'Tailoring/ Boutique'), ('Textiles', 'Textiles'), ('Tiles/Sanitary Ware', 'Tiles/Sanitary Ware'), ('Tours and Travel', 'Tours and Travel'), ('Transport and Logistics', 'Transport and Logistics'), ('Utensils', 'Utensils')], max_length=50, null=True)),
                ('registration_type', models.CharField(blank=True, choices=[('Private Limited Company', 'Private Limited Company'), ('Public Limited Company', 'Public Limited Company'), ('Partnerships Firm', 'Partnerships Firm'), ('Limited Liability Partnership', 'Limited Liability Partnership'), ('One Person Company', 'One Person Company'), ('Sole Proprietorship', 'Sole Proprietorship'), ('Section 8 Company', 'Section 8 Company'), ('Business Not Registered', 'Business Not Registered')], max_length=50, null=True)),
                ('signature', models.ImageField(blank=True, null=True, upload_to='static/signature/')),
                ('website', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_businesses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=255)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('business', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.business')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='current_business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_users', to='users.business'),
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(choices=[('admin', 'Admin'), ('salesman', 'Salesman'), ('delivery_boy', 'Delivery Boy'), ('stock_manager', 'Stock Manager'), ('partner', 'Partner'), ('accountant', 'Accountant')], max_length=30)),
                ('permissions', models.JSONField(default=dict)),
                ('is_removed', models.BooleanField(default=False)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.business')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StaffInvite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.CharField(max_length=15)),
                ('name', models.CharField(max_length=255)),
                ('role_name', models.CharField(choices=[('admin', 'Admin'), ('salesman', 'Salesman'), ('delivery_boy', 'Delivery Boy'), ('stock_manager', 'Stock Manager'), ('partner', 'Partner'), ('accountant', 'Accountant')], max_length=30)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.business')),
                ('invited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to='users.business')),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.subscriptionplan')),
            ],
        ),
    ]
