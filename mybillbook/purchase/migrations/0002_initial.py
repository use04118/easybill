# Generated by Django 5.1.6 on 2025-05-05 09:21

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cash_and_bank', '0002_initial'),
        ('inventory', '0002_initial'),
        ('parties', '0002_initial'),
        ('purchase', '0001_initial'),
        ('sales', '0001_initial'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='debitnote',
            name='business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debitnote', to='users.business'),
        ),
        migrations.AddField(
            model_name='debitnote',
            name='party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parties.party'),
        ),
        migrations.AddField(
            model_name='debitnote',
            name='tcs',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='debitnote_tcs', to='sales.tcs'),
        ),
        migrations.AddField(
            model_name='debitnote',
            name='tds',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='debitnote_tds', to='sales.tds'),
        ),
        migrations.AddField(
            model_name='debitnoteitem',
            name='debitnote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debitnote_items', to='purchase.debitnote'),
        ),
        migrations.AddField(
            model_name='debitnoteitem',
            name='gstTaxRate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.gsttaxrate'),
        ),
        migrations.AddField(
            model_name='debitnoteitem',
            name='item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.item'),
        ),
        migrations.AddField(
            model_name='debitnoteitem',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.service'),
        ),
        migrations.AddField(
            model_name='paymentout',
            name='bank_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_outs', to='cash_and_bank.bankaccount'),
        ),
        migrations.AddField(
            model_name='paymentout',
            name='business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paymentout', to='users.business'),
        ),
        migrations.AddField(
            model_name='paymentout',
            name='party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parties.party'),
        ),
        migrations.AddField(
            model_name='paymentoutpurchase',
            name='payment_out',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='purchase.paymentout'),
        ),
        migrations.AddField(
            model_name='purchase',
            name='bank_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase', to='cash_and_bank.bankaccount'),
        ),
        migrations.AddField(
            model_name='purchase',
            name='business',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purchase', to='users.business'),
        ),
        migrations.AddField(
            model_name='purchase',
            name='party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parties.party'),
        ),
        migrations.AddField(
            model_name='purchase',
            name='tcs',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_tcs', to='sales.tcs'),
        ),
        migrations.AddField(
            model_name='purchase',
            name='tds',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchase_tds', to='sales.tds'),
        ),
        migrations.AddField(
            model_name='paymentoutpurchase',
            name='purchase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='purchase.purchase'),
        ),
        migrations.AddField(
            model_name='paymentout',
            name='settled_purchase',
            field=models.ManyToManyField(blank=True, related_name='payments_settled', through='purchase.PaymentOutPurchase', to='purchase.purchase'),
        ),
        migrations.AddField(
            model_name='purchaseitem',
            name='gstTaxRate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.gsttaxrate'),
        ),
        migrations.AddField(
            model_name='purchaseitem',
            name='item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.item'),
        ),
        migrations.AddField(
            model_name='purchaseitem',
            name='purchase',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_items', to='purchase.purchase'),
        ),
        migrations.AddField(
            model_name='purchaseitem',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.service'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchaseorder', to='users.business'),
        ),
        migrations.AddField(
            model_name='purchaseorder',
            name='party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parties.party'),
        ),
        migrations.AddField(
            model_name='purchaseorderitem',
            name='gstTaxRate',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.gsttaxrate'),
        ),
        migrations.AddField(
            model_name='purchaseorderitem',
            name='item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.item'),
        ),
        migrations.AddField(
            model_name='purchaseorderitem',
            name='purchaseorder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchaseorder_items', to='purchase.purchaseorder'),
        ),
        migrations.AddField(
            model_name='purchaseorderitem',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.service'),
        ),
        migrations.AddField(
            model_name='purchasereturn',
            name='bank_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchasereturn', to='cash_and_bank.bankaccount'),
        ),
        migrations.AddField(
            model_name='purchasereturn',
            name='business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchasereturn', to='users.business'),
        ),
        migrations.AddField(
            model_name='purchasereturn',
            name='party',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parties.party'),
        ),
        migrations.AddField(
            model_name='purchasereturn',
            name='tcs',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchasereturn_tcs', to='sales.tcs'),
        ),
        migrations.AddField(
            model_name='purchasereturn',
            name='tds',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchasereturn_tds', to='sales.tds'),
        ),
        migrations.AddField(
            model_name='purchasereturnitem',
            name='gstTaxRate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.gsttaxrate'),
        ),
        migrations.AddField(
            model_name='purchasereturnitem',
            name='item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.item'),
        ),
        migrations.AddField(
            model_name='purchasereturnitem',
            name='purchasereturn',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchasereturn_items', to='purchase.purchasereturn'),
        ),
        migrations.AddField(
            model_name='purchasereturnitem',
            name='service',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.service'),
        ),
        migrations.AlterUniqueTogether(
            name='debitnote',
            unique_together={('business', 'debitnote_no')},
        ),
        migrations.AlterUniqueTogether(
            name='purchase',
            unique_together={('business', 'purchase_no')},
        ),
        migrations.AlterUniqueTogether(
            name='paymentout',
            unique_together={('business', 'payment_out_number')},
        ),
        migrations.AlterUniqueTogether(
            name='purchaseorder',
            unique_together={('business', 'purchase_order_no')},
        ),
        migrations.AlterUniqueTogether(
            name='purchasereturn',
            unique_together={('business', 'purchasereturn_no')},
        ),
    ]
